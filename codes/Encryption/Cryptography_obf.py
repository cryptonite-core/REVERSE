""" Decompiled by Exotic Hridoy """import osos.system('clear')try:	import requests	import rich	import bs4except ImportError as eror:	print ("(●) Sedang menginstall module {}".format(eror.name))	os.system("python -m pip install {} &> /dev/null".format(eror.name))import time, randomfrom time import sleepfrom bs4 import BeautifulSoup as scrapfrom rich.console import Consolefrom rich.markdown import Markdownfrom rich.panel import Panelcolors = random.choice(["white","orange1","yellow"])inp = " [plum4][[bold deep_pink3]XENZ[plum4]][red]> "def titik(teks):	return "[red]*[yellow]*[green]* [white]{} [green]*[yellow]*[red]*".format(teks)def banner():	logo = """[blue]╔═╗╦ ╦  [red]╔═╗╔╗ ╔═╗╦ ╦╔═╗╔═╗╔═╗╔╦╗╔═╗[blue]╠═╝╚╦╝  [red]║ ║╠╩╗╠╣ ║ ║╚═╗║  ╠═╣ ║ ║╣[blue]╩   ╩   [red]╚═╝╚═╝╚  ╚═╝╚═╝╚═╝╩ ╩ ╩ ╚═╝ """	Console().print(Panel(logo,title=titik("Coded by Xenz")),style=f"{colors}",width=39)class Main:	def __init__(self):		os.system('clear')		banner()		self.session = requests.Session()		self.files = Console().input(" [plum4][[bold deep_pink3]FILE[plum4]] ")		try:self.file = open(self.files,"r").read()		except FileNotFoundError:Console().print(" [plum4][[red]EROR[plum4]][white] File Not found!!");sleep(2);exit()		except IsADirectoryError:Console().print(" [plum4][[red]EROR[plum4]][white] Only file not dir");sleep(2);exit()		self.encrypt()	def encrypt(self):		Console().print(" [plum4][[bold deep_pink3]WAIT[plum4]][white] Please wait...")		sleep(1.5)		try:			req = scrap(self.session.post("https://pyobfuscate.com/pyd",data={'input_text': self.file}).text,'html.parser')			res = req.find('textarea')		except requests.exceptions.ConnectionError as eror:			Console().print(Panel('[plum4]'+str(eror),title=titik('[italic red]Connection error[/]'),width=39,style=colors));exit()		ubah_lagi = self.files.replace(".py","_obf.py").lower()		open(ubah_lagi,"w").write("#Encrypt by xenz\n#https://github.com/Xenz404\n"+str(res.text))		result = """[red][[green]•[red]][white] Name file original  : [cyan]{}[red][[green]•[red]][white] Size file original  : [cyan]{}Bytes[red][[green]•[red]][white] Name file obfuscate : [cyan]{}[red][[green]•[red]][white] Size file obfuscate : [cyan]{}Bytes""".format(self.files,os.path.getsize(self.files),ubah_lagi,os.path.getsize(ubah_lagi))		Console().print(Panel(result,title=titik('Obfuscate success')),justify='left',style=colors)if __name__=="__main__":	Main()